name: CLI tests

# This workflow is triggered by the following events:
# - Pull request changes in the CLI tests and related workflows
# - Manually by the user
#
# If PR is in Draft state, then we use prebuilt binaries
# If PR is in Ready to Merge state, then we build the binaries from the sources

on:
  pull_request:
    paths:
      - 'cli-tests/**'
      - '.github/workflows/test-cli.yaml'
      - '.github/actions/cli-tests/**'
  workflow_dispatch:
    inputs:
      zkvyper-version:
        type: string
        description: "Prebuilt zkvyper version, (repo: https://github.com/matter-labs/era-compiler-vyper/releases)"
        required: false
        default: "1.4.0"
      vyper-version:
        type: string
        description: "vyper version, (repo: https://github.com/vyperlang/vyper/releases)"
        required: true
        default: "0.3.10"
      vyper-commit:
        type: string
        description: "vyper commit, (repo: https://github.com/vyperlang/vyper/releases)"
        required: true
        default: "91361694"

# Cancel the workflow if any new changes pushed to a feature branch or the trunk
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  ZKVYPER_PREBUILT_VERSION: ${{ github.event.inputs.zkvyper-version || '1.4.0' }}

jobs:
  cli-tests:
    strategy:
      fail-fast: false # finalize testing of all targets even if one failed
      matrix:
        include:
          - name: "MacOS x86"
            runner: macos-12-large
          - name: "MacOS arm64"
            runner: [self-hosted, macOS, ARM64]
          - name: "Linux x86"
            runner: matterlabs-ci-runner
            image: matterlabs/llvm_runner:ubuntu22-llvm15-latest
            target: "x86_64-unknown-linux-musl"
          - name: "Linux ARM64"
            runner: matterlabs-ci-runner-arm
            image: matterlabs/llvm_runner:ubuntu22-llvm15-latest
            target: "aarch64-unknown-linux-musl"
            rustflags: "-C link-arg=-Wl,-Bstatic -C link-arg=-lc -C link-arg=-L/usr/lib/llvm-15/lib/clang/15.0.7/lib/linux/ -C link-arg=-lclang_rt.builtins-aarch64"
          - name: "Windows"
            runner: windows-2022-github-hosted-16core
    runs-on: ${{ matrix.runner }}
    container:
      image: ${{ matrix.image || '' }} # Special workaround to allow matrix builds with optional container
    name: ${{ matrix.name }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Prepare Windows env
        if: runner.os == 'Windows'
        uses: ./.github/actions/prepare-msys

      - name: Build LLVM
        if: github.event.pull_request.draft == false
        uses: ./.github/actions/build-llvm
        with:
          target: ${{ matrix.target }}

      - name: Build zkvyper
        if: github.event.pull_request.draft == false
        uses: ./.github/actions/build
        with:
          target: ${{ matrix.target }}
          rustflags: ${{ matrix.rustflags }}

      - name: Install vyper compiler
        # TODO: remove the condition as soon as the Vyper is available on Linux ARM64
        if: matrix.name != 'Linux ARM64'
        uses: ./.github/actions/install-vyper
        with:
          vyper-version: ${{ github.event.inputs.vyper-version }}
          vyper-commit: ${{ github.event.inputs.vyper-commit }}

      - name: Run CLI tests
        # TODO: remove the condition as soon as the Vyper is available on Linux ARM64
        if: matrix.name != 'Linux ARM64'
        uses: ./.github/actions/cli-tests
        with:
          use-prebuilt-zkvyper: ${{ github.event.pull_request.draft || 'true' }}
          zkvyper-version: ${{ github.event.inputs.zkvyper-version || env.ZKVYPER_PREBUILT_VERSION }}
